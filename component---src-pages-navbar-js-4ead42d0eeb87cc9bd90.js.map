{"version":3,"sources":["webpack://react-element-popper/./src/docs/navbar.js","webpack://react-element-popper/./src/pages/navbar.js"],"names":["Doc","translate","language","title","description","NavBar","className","useState","navItem","setNavItem","navBarRef","useRef","useEffect","handleClickOutSide","e","current","contains","target","classList","document","addEventListener","removeEventListener","items","home","name","childs","store","docs","about","itemNames","Object","keys","ref","map","index","key","element","NavItem","popper","List","containerStyle","margin","offsetY","position","length","fixMainPosition","onClick","toggleVisible","onKeyDown","role","tabIndex","subMenu","setSubMenu","item","i","Item","width","onMouseOver","pageContext","doc"],"mappings":"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","file":"component---src-pages-navbar-js-4ead42d0eeb87cc9bd90.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport ElementPopper from \"../../../src/index\";\r\n\r\nexport default function Doc(translate, language) {\r\n  const navbar = {\r\n    title: \"NavBar\",\r\n    description: (\r\n      <>\r\n        <NavBar />\r\n        <p>{translate(\"style.css:\")}</p>\r\n        <pre>\r\n          <code className=\"language-css\">\r\n            {`.nested-navbar {\r\n  height: 55px;\r\n  background-color: rgb(146, 146, 221);\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n          \r\n.nested-navbar .navbar-item {\r\n  background-color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 5px;\r\n  line-height: 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n}\r\n          \r\n.nested-navbar .navbar-item:hover {\r\n  background-color: rgb(170, 170, 247);\r\n  color: white;\r\n  transition: 0.4s;\r\n}\r\n          \r\n.items {\r\n  background-color: rgb(146, 146, 221);\r\n  min-width: 100px;\r\n}\r\n          \r\n.items .item {\r\n  cursor: pointer;\r\n  margin: 2px 0;\r\n  font-size: 12px;\r\n  color: white;\r\n  padding: 2px 10px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n          \r\n.items .item:hover {\r\n  background-color: rgb(115, 115, 196);\r\n}\r\n          \r\n.items .item span {\r\n  float: right;\r\n}`}\r\n          </code>\r\n        </pre>\r\n        <pre>\r\n          <code className=\"language-jsx\">\r\n            {`function NavBar() {\r\n  const [navItem, setNavItem] = useState(\"\")\r\n  const navBarRef = useRef()\r\n          \r\n  useEffect(() => {\r\n    function handleClickOutSide(e) {\r\n      if (\r\n        (\r\n          navBarRef.current &&\r\n          !navBarRef.current.contains(e.target) &&\r\n          !e.target.classList.contains(\"navbar-item\")\r\n        ) ||\r\n        e.target.classList.contains(\"navbar\")\r\n      ) {\r\n        setNavItem(\"\")\r\n      }\r\n    }\r\n          \r\n    document.addEventListener(\"click\", handleClickOutSide)\r\n\r\n    return () => document.removeEventListener(\"click\", handleClickOutSide)\r\n  }, [])\r\n          \r\n  const items = {\r\n    home: [\r\n      {\r\n        name: \"item 1\",\r\n        childs: [\r\n          {\r\n            name: \"sub item 1\",\r\n            childs: [\r\n              { name: \"sub item 1\" },\r\n              { name: \"sub item 2\" },\r\n              { name: \"sub item 3\" },\r\n              { name: \"sub item 4\" },\r\n              { name: \"sub item 5\" },\r\n              { name: \"sub item 6\" }\r\n            ]\r\n          },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" }\r\n        ]\r\n      },\r\n      {\r\n        name: \"item 2\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" },\r\n          { name: \"sub item 5\" },\r\n          { name: \"sub item 6\" }\r\n        ]\r\n      },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" }\r\n    ],\r\n    store: [\r\n      { name: \"item 1\" },\r\n      { name: \"item 2\" },\r\n      { name: \"item 3\" },\r\n      {\r\n        name: \"item 4\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" }\r\n        ]\r\n      }\r\n    ],\r\n    docs: [\r\n      { name: \"item 1\", },\r\n      {\r\n        name: \"item 2\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          {\r\n            name: \"sub item 4\",\r\n            childs: [\r\n              { name: \"sub item 1\" }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" }\r\n    ],\r\n    about: [\r\n      {\r\n        name: \"item 1\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" }\r\n        ]\r\n      },\r\n      { name: \"item 2\" },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" }\r\n    ]\r\n  }\r\n          \r\n  const itemNames = Object.keys(items)\r\n          \r\n  return (\r\n    <div\r\n      ref={navBarRef}\r\n      className=\"nested-navbar\"\r\n    >\r\n      {itemNames.map((name, index) => {\r\n        return (\r\n          <ElementPopper\r\n            key={index}\r\n            element={<NavItem name={name} />}\r\n            popper={navItem === name && (\r\n              <List items={items[name]} />\r\n            )}\r\n            containerStyle={{ margin: \"auto 0\" }}\r\n            offsetY={12}\r\n            position={index === 0 ? \"bottom-left\" : index === (itemNames.length - 1) ? \"bottom-right\" : \"bottom-center\"}\r\n            fixMainPosition\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n          \r\n  function NavItem({ name }) {\r\n    return (\r\n      <div\r\n        className=\"navbar-item\"\r\n        onClick={toggleVisible}\r\n      >\r\n        {name}\r\n      </div>\r\n    )\r\n          \r\n    function toggleVisible() {\r\n      setNavItem(navItem === name ? \"\" : name)\r\n    }\r\n  }\r\n          \r\n  function List({ items }) {\r\n    const [subMenu, setSubMenu] = useState(\"\")\r\n          \r\n    return (\r\n      <div className=\"items\">\r\n        {items.map((item, i) => {\r\n          return (item.childs ?\r\n            <ElementPopper\r\n              key={i}\r\n              element={<Item item={item} />}\r\n              popper={subMenu === item.name && <List items={item.childs} />}\r\n              containerStyle={{ width: \"100%\" }}\r\n              position=\"right-top\"\r\n            /> :\r\n            <Item key={i} item={item} />\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n          \r\n    function Item({ item }) {\r\n      return (\r\n        <div\r\n          className=\"item\"\r\n          onMouseOver={() => openSubMenu(item.name)}\r\n        >\r\n          {item.name}\r\n          {item.childs && <span>{\">\"}</span>}\r\n        </div>\r\n      )\r\n    }\r\n          \r\n    function openSubMenu(name) {\r\n      setSubMenu(name)\r\n    }\r\n  }\r\n}`}\r\n          </code>\r\n        </pre>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return [navbar];\r\n}\r\n\r\nfunction NavBar() {\r\n  const [navItem, setNavItem] = useState(\"\");\r\n  const navBarRef = useRef();\r\n\r\n  useEffect(() => {\r\n    function handleClickOutSide(e) {\r\n      if (\r\n        (navBarRef.current &&\r\n          !navBarRef.current.contains(e.target) &&\r\n          !e.target.classList.contains(\"navbar-item\")) ||\r\n        e.target.classList.contains(\"navbar\")\r\n      ) {\r\n        setNavItem(\"\");\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"click\", handleClickOutSide);\r\n\r\n    return () => document.removeEventListener(\"click\", handleClickOutSide);\r\n  }, []);\r\n\r\n  const items = {\r\n    home: [\r\n      {\r\n        name: \"item 1\",\r\n        childs: [\r\n          {\r\n            name: \"sub item 1\",\r\n            childs: [\r\n              { name: \"sub item 1\" },\r\n              { name: \"sub item 2\" },\r\n              { name: \"sub item 3\" },\r\n              { name: \"sub item 4\" },\r\n              { name: \"sub item 5\" },\r\n              { name: \"sub item 6\" },\r\n            ],\r\n          },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"item 2\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" },\r\n          { name: \"sub item 5\" },\r\n          { name: \"sub item 6\" },\r\n        ],\r\n      },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" },\r\n    ],\r\n    store: [\r\n      { name: \"item 1\" },\r\n      { name: \"item 2\" },\r\n      { name: \"item 3\" },\r\n      {\r\n        name: \"item 4\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" },\r\n        ],\r\n      },\r\n    ],\r\n    docs: [\r\n      { name: \"item 1\" },\r\n      {\r\n        name: \"item 2\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          {\r\n            name: \"sub item 4\",\r\n            childs: [{ name: \"sub item 1\" }],\r\n          },\r\n        ],\r\n      },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" },\r\n    ],\r\n    about: [\r\n      {\r\n        name: \"item 1\",\r\n        childs: [\r\n          { name: \"sub item 1\" },\r\n          { name: \"sub item 2\" },\r\n          { name: \"sub item 3\" },\r\n          { name: \"sub item 4\" },\r\n        ],\r\n      },\r\n      { name: \"item 2\" },\r\n      { name: \"item 3\" },\r\n      { name: \"item 4\" },\r\n    ],\r\n  };\r\n\r\n  const itemNames = Object.keys(items);\r\n\r\n  return (\r\n    <div ref={navBarRef} className=\"nested-navbar\">\r\n      {itemNames.map((name, index) => {\r\n        return (\r\n          <ElementPopper\r\n            key={index}\r\n            element={<NavItem name={name} />}\r\n            popper={navItem === name && <List items={items[name]} />}\r\n            containerStyle={{ margin: \"auto 0\" }}\r\n            offsetY={12}\r\n            position={\r\n              index === 0\r\n                ? \"bottom-left\"\r\n                : index === itemNames.length - 1\r\n                ? \"bottom-right\"\r\n                : \"bottom-center\"\r\n            }\r\n            fixMainPosition\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  function NavItem({ name }) {\r\n    return (\r\n      <div\r\n        className=\"navbar-item\"\r\n        onClick={toggleVisible}\r\n        onKeyDown={toggleVisible}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        {name}\r\n      </div>\r\n    );\r\n\r\n    function toggleVisible() {\r\n      setNavItem(navItem === name ? \"\" : name);\r\n    }\r\n  }\r\n\r\n  function List({ items }) {\r\n    const [subMenu, setSubMenu] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"items\">\r\n        {items.map((item, i) => {\r\n          return item.childs ? (\r\n            <ElementPopper\r\n              key={i}\r\n              element={<Item item={item} />}\r\n              popper={subMenu === item.name && <List items={item.childs} />}\r\n              containerStyle={{ width: \"100%\" }}\r\n              position=\"right-top\"\r\n            />\r\n          ) : (\r\n            <Item key={i} item={item} />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n\r\n    function Item({ item }) {\r\n      return (\r\n        <div className=\"item\" onMouseOver={() => openSubMenu(item.name)}>\r\n          {item.name}\r\n          {item.childs && <span>{\">\"}</span>}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    function openSubMenu(name) {\r\n      setSubMenu(name);\r\n    }\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport doc from \"../docs/navbar\"\r\n\r\nexport default function NavBar({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={doc} />\r\n  )\r\n}"],"sourceRoot":""}