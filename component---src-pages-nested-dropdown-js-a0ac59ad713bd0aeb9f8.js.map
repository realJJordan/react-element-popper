{"version":3,"sources":["webpack://react-element-popper/./src/docs/nested_dropdown.js","webpack://react-element-popper/./src/pages/nested-dropdown.js"],"names":["translate","language","useState","state","setState","state1","setState1","Button","number","onClick","updateState","list","className","mainList","map","index","key","onMouseOver","main","containerStyle","width","element","style","float","popper","position","title","description","code","jsx","marginBottom","NestedDropDown","pageContext","doc"],"mappings":"8MAGe,SAAS,EAACA,EAAWC,GAAW,IAAD,GAClBC,cAAS,IAA5BC,EADqC,KAC9BC,EAD8B,QAEhBF,eAAS,GAA9BG,EAFqC,KAE7BC,EAF6B,KAMtCC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,0BAAQC,QAAS,kBAHC,SAAAD,GAAM,aAAIF,EAAU,OAAD,UAAMD,IAAN,MAAeG,IAAUH,EAAOG,GAAhC,KAGdE,CAAYF,KAAUR,EAAU,gBAGnDW,EACJ,sBAAIC,UAAU,YACZ,0BAAKZ,EAAU,WACf,0BAAKA,EAAU,WACf,0BAAKA,EAAU,WACf,0BAAKA,EAAU,YAIba,EACJ,uBAAKD,UAAU,YACZ,CAAC,EAAG,EAAG,EAAG,GAAGE,KAAI,SAACN,EAAQO,GAAT,OAChB,uBACEC,IAAKD,EACLH,UAAU,OACVK,YAAa,wBAAMb,IAAQ,GAAGc,MAAM,IAAO,OAASV,IAAS,EAAlC,MAE3B,gBAAC,IAAD,CACEW,eAAgB,CACdC,MAAO,SAETC,QACE,gCACE,4BAAOrB,EAAU,QAAjB,IAA2BQ,GAC3B,wBAAMc,MAAO,CAAEC,MAAoB,OAAbtB,EAAoB,QAAU,SAAW,MAGnEuB,OAAQrB,EAAM,OAASK,IAAWG,EAClCc,SAAuB,OAAbxB,EAAoB,YAAc,kBA6KtD,MAAO,CAtKe,CACpByB,MAAO,iBACPC,YAAa,gBACbC,KAAK,qVASyC5B,EAAU,cATpD,sEAcuB,OAAbC,EAAoB,QAAU,QAdxC,uHAkB2B,OAAbA,EAAoB,QAAU,QAlB5C,uIAsB+B,OAAbA,EAAoB,QAAU,QAtBhD,+FAwBoCD,EAAU,YAxB9C,iFAgCJ6B,IAAK,gBAAC,IAAD,CACHJ,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OAAQnB,EAAO,IACb,gBAAC,IAAD,CACEoB,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OAAQnB,EAAO,IACb,gBAAC,IAAD,CACEoB,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OAAQnB,EAAO,IAAM,8BAASL,EAAU,oBAQnC,CACf0B,MAAO,kBACPC,YAAa,gCACX,yBAAI3B,EAAU,oBACd,yBAAIA,EAAU,eACd,2BACE,wBAAMY,UAAU,gBAAhB,4VA2BF,yBAAIZ,EAAU,QAAd,KACA,2BACE,wBAAMY,UAAU,gBAAhB,wOAUIZ,EAAU,UAVd,oBAWIA,EAAU,UAXd,oBAYIA,EAAU,UAZd,oBAaIA,EAAU,UAbd,wdAgCgBA,EAAU,QAhC1B,6DAiC8C,OAAbC,EAAoB,QAAU,QAjC/D,qIAqC6B,OAAbA,EAAoB,YAAc,YArClD,qNAkDID,EAAU,cAlDd,0FAsDuB,OAAbC,EAAoB,cAAgB,gBAtD9C,uBA8DJ4B,IAAK,uBAAKP,MAAO,CAAEQ,aAAc,SAC/B,gBAAC,IAAD,CACET,QACE,0BACEZ,QAAS,kBAAML,EAAS,CAAEc,MAAOf,EAAMe,SAEtClB,EAAU,eAGfwB,OAAQrB,EAAMe,MAAQL,EACtBY,SAAuB,OAAbxB,EAAoB,cAAgB,oBC7MvC,SAAS8B,EAAT,GAA0C,IACjD9B,EADgD,EAAf+B,YACV/B,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUgC,IAAKA","file":"component---src-pages-nested-dropdown-js-a0ac59ad713bd0aeb9f8.js","sourcesContent":["import React, { useState } from \"react\"\nimport ElementPopper from \"../../../index\"\n\nexport default function (translate, language) {\n  const [state, setState] = useState({})\n  const [state1, setState1] = useState(false)\n\n  const updateState = number => setState1({ ...state1, [number]: !state1[number] })\n\n  const Button = ({ number }) => (\n    <button onClick={() => updateState(number)}>{translate(\"click here\")}</button>\n  )\n\n  const list = (\n    <ul className=\"dropdown\">\n      <li>{translate(\"item 1\")}</li>\n      <li>{translate(\"item 2\")}</li>\n      <li>{translate(\"item 3\")}</li>\n      <li>{translate(\"item 4\")}</li>\n    </ul>\n  )\n\n  const mainList = (\n    <div className=\"dropdown\">\n      {[1, 2, 3, 4].map((number, index) => (\n        <div\n          key={index}\n          className=\"item\"\n          onMouseOver={() => setState({ main: true, [\"item\" + number]: true })}\n        >\n          <ElementPopper\n            containerStyle={{\n              width: \"120px\"\n            }}\n            element={(\n              <>\n                <span>{translate(\"item\")} {number}</span>\n                <span style={{ float: language === \"en\" ? \"right\" : \"left\" }}>{\">\"}</span>\n              </>\n            )}\n            popper={state[\"item\" + number] && list}\n            position={language === \"en\" ? \"right-top\" : \"left-top\"}\n          />\n        </div>\n      ))}\n    </div>\n  )\n\n  const simpleExample = {\n    title: \"Simple Example\",\n    description: \"simple_nested\",\n    code: `import React, { useState } from \"react\"\nimport ElementPopper from \"react-element-popper\"\n\nexport default function App() {\n  const [state, setState] = useState({})\n\n  const updateState = number => setState({ ...state, [number]: !state[number] })\n\n  const Button = ({ number }) => (\n    <button onClick={() => updateState(number)}>${translate(\"click here\")}</button>\n  )\n\n  return (\n    <ElementPopper\n      position=\"${language === \"en\" ? \"right\" : \"left\"}\"\n      element={<Button number={1} />}\n      popper={state[1] && (\n        <ElementPopper\n          position=\"${language === \"en\" ? \"right\" : \"left\"}\"\n          element={<Button number={2} />}\n          popper={state[2] && (\n            <ElementPopper\n              position=\"${language === \"en\" ? \"right\" : \"left\"}\"\n              element={<Button number={3} />}\n              popper={state[3] && <button>${translate(\"last one\")}</button>}\n            />\n          )}\n        />\n      )}\n    />\n  )\n}`,\n    jsx: <ElementPopper\n      position={language === \"en\" ? \"right\" : \"left\"}\n      element={<Button number={1} />}\n      popper={state1[1] && (\n        <ElementPopper\n          position={language === \"en\" ? \"right\" : \"left\"}\n          element={<Button number={2} />}\n          popper={state1[2] && (\n            <ElementPopper\n              position={language === \"en\" ? \"right\" : \"left\"}\n              element={<Button number={3} />}\n              popper={state1[3] && <button>{translate(\"last one\")}</button>}\n            />\n          )}\n        />\n      )}\n    />\n  }\n\n  const dropdown = {\n    title: \"Nested DropDown\",\n    description: <>\n      <p>{translate(\"nested_dropdown\")}</p>\n      <p>{translate(\"style.css:\")}</p>\n      <pre>\n        <code className=\"language-css\">{\n          `.dropdown {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  background-color: white;\n  border: 1px solid black;\n}\n\n.dropdown li {\n  min-width: 120px;\n  cursor: pointer;\n  padding: 2px 10px;\n}\n\n.dropdown li:hover,\n.dropdown div.item:hover {\n  background: #ddd;\n}\n\n.dropdown div.item {\n  cursor: pointer;\n  height: 26px;\n}`\n        }\n        </code>\n      </pre>\n      <p>{translate(\"code\")}:</p>\n      <pre>\n        <code className=\"language-jsx\">\n          {\n            `import React, { useState } from \"react\"\nimport ElementPopper from \"react-element-popper\"\n\nexport default function App() {\n  const [state, setState] = useState({})\n\n  const list = (\n    <ul className=\"dropdown\">\n      <li>${translate(\"item 1\")}</li>\n      <li>${translate(\"item 2\")}</li>\n      <li>${translate(\"item 3\")}</li>\n      <li>${translate(\"item 4\")}</li>\n    </ul>\n  )\n        \n  const mainList = (\n    <div className=\"dropdown\">\n      {[1, 2, 3, 4].map((number, index) => (\n        <div\n          key={index}\n          className=\"item\"\n          onMouseOver={() => setState({ \n            main: true, \n            [\"item\" + number]: true \n          })}\n        >\n          <ElementPopper\n            containerStyle={{ width: \"120px\" }}\n            element={(\n              <>\n                <span>${translate(\"item\")} {number}</span>\n                <span style={{ float: \"${language === \"en\" ? \"right\" : \"left\"}\" }}>{\">\"}</span>\n              </>\n            )}\n            popper={state[\"item\" + number] && list}\n            position=\"${language === \"en\" ? \"right-top\" : \"left-top\"}\"\n          />\n        </div>\n      ))}\n    </div>\n  )\n\n  return (\n    <ElementPopper\n      element={(\n        <button\n          onClick={() => setState({ main: !state.main })}\n        >\n          ${translate(\"click here\")}\n        </button>\n      )}\n      popper={state.main && mainList}\n      position=\"${language === \"en\" ? \"bottom-left\" : \"bottom-right\"}\"\n    />\n  )\n}`\n          }\n        </code>\n      </pre>\n    </>,\n    jsx: <div style={{ marginBottom: \"40px\" }}>\n      <ElementPopper\n        element={(\n          <button\n            onClick={() => setState({ main: !state.main })}\n          >\n            {translate(\"click here\")}\n          </button>\n        )}\n        popper={state.main && mainList}\n        position={language === \"en\" ? \"bottom-left\" : \"bottom-right\"}\n      />\n    </div>\n  }\n\n  return [\n    simpleExample,\n    dropdown\n  ]\n}","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport doc from \"../docs/nested_dropdown\"\n\nexport default function NestedDropDown({ pageContext }) {\n  const language = pageContext.language || \"en\"\n\n  return (\n    <Layout language={language} doc={doc} />\n  )\n}"],"sourceRoot":""}