{"version":3,"sources":["webpack://react-element-popper/./src/docs/multi_select.js","webpack://react-element-popper/./src/pages/multi-select.js"],"names":["Doc","translate","language","useState","values","setValues","values1","setValues1","title","description","className","code","jsx","MultiSelect","onChange","options","useClickOutside","isMenuOpen","setIsMenuOpen","ref","useRef","useEffect","document","addEventListener","handleClickOutside","removeEventListener","e","current","contains","target","mustSelectAll","length","toggleMenu","containerClassName","element","onClick","onKeyDown","role","tabIndex","popper","style","width","clientWidth","type","checked","map","option","index","text","value","key","includes","select","offsetY","filter","val","push","pageContext","doc"],"mappings":"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","file":"component---src-pages-multi-select-js-6a24066401205671d661.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport ElementPopper from \"../../../src/index\";\r\n\r\nexport default function Doc(translate, language) {\r\n  const [values, setValues] = useState([\"1\", \"2\"]);\r\n  const [values1, setValues1] = useState([\"1\", \"2\"]);\r\n\r\n  const multiSelect = {\r\n    title: \"Multi Select\",\r\n    description: (\r\n      <>\r\n        <p>{translate(\"style.css:\")}</p>\r\n        <pre>\r\n          <code className=\"language-css\">\r\n            {`.multi-select {\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n  min-width: 120px;\r\n  background-color: white;\r\n  box-sizing: border-box;\r\n}\r\n            \r\n.multi-select .placeholder {\r\n  border: 1px #ddd solid;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  height: 21px;\r\n  font-size: 13px;\r\n  color: rgb(37, 35, 35);\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  padding: 5px 20px;\r\n}\r\n            \r\n.multi-select .options {\r\n  border: 1px solid #ddd;\r\n  background: white;\r\n  color: black;\r\n  max-height: 300px;\r\n  overflow: auto;\r\n  border-radius: 2px;\r\n}\r\n            \r\n.multi-select .options .option {\r\n  display: block;\r\n  color: rgb(37, 35, 35);\r\n  font-weight: 500px;\r\n  font-size: 14px;\r\n  margin-top: 0;\r\n  padding-top: 2px;\r\n}\r\n            \r\n.multi-select .options .option:hover {\r\n  background-color: dodgerblue;\r\n  color: white;\r\n}`}\r\n          </code>\r\n        </pre>\r\n      </>\r\n    ),\r\n    code: `import React, { useRef, useState } from \"react\"\r\nimport ElementPopper from \"react-element-popper\"\r\n\r\nexport default function App() {\r\n  const [values, setValues] = useState([\"1\", \"2\"])\r\n\r\n  return (\r\n    <MultiSelect\r\n      values={values}\r\n      onChange={setValues}\r\n      options={[\r\n        [\"${translate(\"option\")} 1\", \"1\"],\r\n        [\"${translate(\"option\")} 2\", \"2\"],\r\n        [\"${translate(\"option\")} 3\", \"3\"],\r\n        [\"${translate(\"option\")} 4\", \"4\"],\r\n        [\"${translate(\"option\")} 5\", \"5\"],\r\n      ]}\r\n    />\r\n  )\r\n}\r\n    \r\nfunction MultiSelect({ options = [], values = [], onChange }) {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n  const ref = useRef()\r\n\r\n  const mustSelectAll = values.length !== options.length\r\n    \r\n  return (\r\n    <ElementPopper\r\n      ref={ref}\r\n      containerClassName=\"multi-select\"\r\n      element={(\r\n        <div\r\n          className=\"placeholder\"\r\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n        >\r\n          ${translate(\"click here to select\")}\r\n        </div>\r\n      )}\r\n      popper={isMenuOpen && (\r\n        <div className=\"options\" style={{ width: ref?.current?.clientWidth || \"100px\" }}>\r\n          <label className=\"option\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={!mustSelectAll}\r\n              onChange={selectAll}\r\n            />\r\n            <span>${translate(\"select all\")}</span>\r\n          </label>\r\n          {options.map(([text, value], index) => (\r\n            <label key={index} className=\"option\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={value}\r\n                checked={values.includes(value)}\r\n                onChange={select}\r\n              />\r\n              <span>{text}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n      offsetY={2}\r\n    />\r\n  )\r\n    \r\n  function selectAll() {\r\n    if (mustSelectAll) {\r\n      values = options.map(option => option[1])\r\n    } else {\r\n      values = []\r\n    }\r\n\r\n    if (onChange) onChange(values)\r\n  }\r\n\r\n  function select(e) {\r\n    let value = e.target.value\r\n\r\n    if (values.includes(value)) {\r\n      values = values.filter(val => val !== value)\r\n    } else {\r\n      values.push(value)\r\n    }\r\n\r\n    if (onChange) onChange([...values])\r\n  }\r\n}`,\r\n    jsx: (\r\n      <MultiSelect\r\n        values={values}\r\n        onChange={setValues}\r\n        options={[\r\n          [`${translate(\"option\")} 1`, \"1\"],\r\n          [`${translate(\"option\")} 2`, \"2\"],\r\n          [`${translate(\"option\")} 3`, \"3\"],\r\n          [`${translate(\"option\")} 4`, \"4\"],\r\n          [`${translate(\"option\")} 5`, \"5\"],\r\n        ]}\r\n        translate={translate}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const handleClickOutside = {\r\n    title: \"Handle Click Outside\",\r\n    description: \"handle_click_outside\",\r\n    code: `useEffect(() => {\r\n  function handleClickOutside(e) {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      setIsMenuOpen(false)\r\n    }\r\n  }\r\n  \r\n  document.addEventListener(\"click\", handleClickOutside)\r\n  return () => document.removeEventListener(\"click\", handleClickOutside)\r\n}, [])`,\r\n    jsx: (\r\n      <MultiSelect\r\n        values={values1}\r\n        onChange={setValues1}\r\n        options={[\r\n          [`${translate(\"option\")} 1`, \"1\"],\r\n          [`${translate(\"option\")} 2`, \"2\"],\r\n          [`${translate(\"option\")} 3`, \"3\"],\r\n          [`${translate(\"option\")} 4`, \"4\"],\r\n          [`${translate(\"option\")} 5`, \"5\"],\r\n        ]}\r\n        useClickOutside\r\n        translate={translate}\r\n      />\r\n    ),\r\n  };\r\n\r\n  return [multiSelect, handleClickOutside];\r\n}\r\n\r\nfunction MultiSelect({\r\n  options = [],\r\n  values = [],\r\n  onChange,\r\n  useClickOutside = false,\r\n  translate,\r\n}) {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!useClickOutside) return;\r\n\r\n    function handleClickOutside(e) {\r\n      if (ref.current && !ref.current.contains(e.target)) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => document.removeEventListener(\"click\", handleClickOutside);\r\n  }, [useClickOutside]);\r\n\r\n  const mustSelectAll = values.length !== options.length;\r\n\r\n  function toggleMenu() {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  }\r\n\r\n  return (\r\n    <ElementPopper\r\n      ref={ref}\r\n      containerClassName=\"multi-select\"\r\n      element={\r\n        <div\r\n          className=\"placeholder\"\r\n          onClick={toggleMenu}\r\n          onKeyDown={toggleMenu}\r\n          role=\"button\"\r\n          tabIndex=\"0\"\r\n        >\r\n          {translate(\"click here to select\")}\r\n        </div>\r\n      }\r\n      popper={\r\n        isMenuOpen && (\r\n          <div\r\n            className=\"options\"\r\n            style={{ width: ref?.current?.clientWidth || \"100px\" }}\r\n          >\r\n            <label className=\"option\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={!mustSelectAll}\r\n                onChange={selectAll}\r\n              />\r\n              <span>{translate(\"select all\")}</span>\r\n            </label>\r\n            {options.map(([text, value], index) => (\r\n              <label className=\"option\" key={index}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={value}\r\n                  checked={values.includes(value)}\r\n                  onChange={select}\r\n                />\r\n                <span>{text}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        )\r\n      }\r\n      offsetY={2}\r\n    />\r\n  );\r\n\r\n  function selectAll() {\r\n    if (mustSelectAll) {\r\n      values = options.map((option) => option[1]);\r\n    } else {\r\n      values = [];\r\n    }\r\n\r\n    if (onChange) onChange(values);\r\n  }\r\n\r\n  function select(e) {\r\n    let value = e.target.value;\r\n\r\n    if (values.includes(value)) {\r\n      values = values.filter((val) => val !== value);\r\n    } else {\r\n      values.push(value);\r\n    }\r\n\r\n    if (onChange) onChange([...values]);\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport doc from \"../docs/multi_select\"\r\n\r\nexport default function MultiSelect({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={doc} />\r\n  )\r\n}"],"sourceRoot":""}