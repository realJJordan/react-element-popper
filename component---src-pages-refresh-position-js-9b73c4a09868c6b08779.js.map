{"version":3,"sources":["webpack://react-element-popper/./src/docs/refresh_position.js","webpack://react-element-popper/./src/pages/refresh-position.js"],"names":["Doc","translate","ref","useRef","useState","visible","setVisible","visible2","setVisible2","globalProps","element","Component","size","backgroundColor","popper","position","fixMainPosition","popperShadow","arrow","title","description","code","jsx","style","marginBottom","padding","onClick","current","refreshPosition","children","width","height","textAlign","display","flexDirection","justifyContent","fontSize","RefreshPosition","language","pageContext","doc"],"mappings":"+MAGe,SAASA,EAAIC,GAC1B,IAAMC,GAAMC,cADyB,GAEPC,eAAS,GAAhCC,EAF8B,KAErBC,EAFqB,QAGLF,eAAS,GAAlCG,EAH8B,KAGpBC,EAHoB,KAK/BC,EAAc,CAClBC,QACE,gBAACC,EAAD,CAAWC,KAAM,GAAIC,gBAAgB,MAAMZ,UAAWA,GAAtD,oBAIFa,OACE,gBAACH,EAAD,CAAWC,KAAM,IAAKC,gBAAgB,QAAQZ,UAAWA,GAAzD,kBAIFc,SAAU,SACVC,iBAAiB,EACjBC,cAAc,EACdC,OAAO,GAiHT,MAAO,CA9GS,CACdC,MAAO,sBACPC,YAAa,mBACbC,KAAK,20BAmCKpB,EAAU,8CAnChB,sCAoCoBA,EAClB,8DArCF,2JA2CgBA,EAAU,WA3C1B,QA2C4CA,EAAU,cA3CtD,4HAgDMA,EAAU,2CAhDhB,uCAiDqBA,EACnB,8DAlDF,2PA4DiBA,EAAU,WA5D3B,QA4D6CA,EAAU,cA5DvD,0DAkEJqB,IACE,2BACE,uBAAKC,MAAO,CAAEC,aAAc,QAASC,QAAS,WAC5C,0BAAKxB,EAAU,8CAAf,MACCI,GACC,4BACGJ,EACC,+DAIN,gBAAC,IAAkBQ,GACnB,0BAAQiB,QAAS,kBAAMpB,GAAYD,KACtBJ,EAAVI,EAAoB,UAAuB,gBAIhD,uBAAKkB,MAAO,CAAEC,aAAc,QAASC,QAAS,WAC5C,0BAAKxB,EAAU,2CAAf,MACCM,GACC,4BACGN,EACC,+DAIN,gBAAC,IAAD,eAAeC,IAAKA,GAASO,IAC7B,0BACEiB,QAAS,WACPlB,GAAaD,GAEbL,EAAIyB,QAAQC,oBAGF3B,EAAXM,EAAqB,UAAuB,mBAUzD,SAASI,EAAT,GAAoE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,gBAAiBgB,EAAuB,EAAvBA,SAAU5B,EAAa,EAAbA,UACpD,OACE,uBACEsB,MAAO,CACLO,MAAOlB,EAAO,KACdmB,OAAQnB,EAAO,KACfC,kBACAmB,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,SAAU,SAGXnC,EAAU4B,ICpJF,SAASQ,EAAT,GAA2C,IAClDC,EADiD,EAAfC,YACXD,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUE,IAAKA","file":"component---src-pages-refresh-position-js-9b73c4a09868c6b08779.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport ElementPopper from \"../../../src/index\";\r\n\r\nexport default function Doc(translate) {\r\n  const ref = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n  const [visible2, setVisible2] = useState(false);\r\n\r\n  const globalProps = {\r\n    element: (\r\n      <Component size={80} backgroundColor=\"red\" translate={translate}>\r\n        Refrence Element\r\n      </Component>\r\n    ),\r\n    popper: (\r\n      <Component size={100} backgroundColor=\"white\" translate={translate}>\r\n        Popper Element\r\n      </Component>\r\n    ),\r\n    position: \"bottom\",\r\n    fixMainPosition: true,\r\n    popperShadow: true,\r\n    arrow: true,\r\n  };\r\n\r\n  const refresh = {\r\n    title: \"Refreshing Position\",\r\n    description: \"refresh_position\",\r\n    code: `import React, { useState, useRef } from \"react\"\r\nimport ElementPopper from \"react-element-popper\"\r\nimport \"react-element-popper/build/element_popper.css\"\r\n\r\nexport default function App() {\r\n  const [visible, setVisible] = useState(false)\r\n  const [visible2, setVisible2] = useState(false)\r\n  const ref = useRef()\r\n\r\n  const globalProps = {\r\n    element: (\r\n      <Component \r\n        size={80}\r\n        backgroundColor=\"red\"\r\n      >\r\n        Refrence Element\r\n      </Component>\r\n    ),\r\n    popper: (\r\n      <Component \r\n        size={100}\r\n        backgroundColor=\"white\"\r\n      >\r\n        Popper Element\r\n      </Component>\r\n    ),\r\n    position: \"bottom\",\r\n    fixMainPosition: true,\r\n    popperShadow: true,\r\n    arrow: true\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\r\n        <h2>${translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n        {visible && <span>${translate(\r\n          \"a demo text to force the refrence element to move forward!\"\r\n        )}</span>}\r\n        <ElementPopper {...globalProps} />\r\n        <button\r\n          onClick={() => setVisible(!visible)}\r\n        >\r\n          {visible ? \"${translate(\"refresh\")}\" : \"${translate(\"click here\")}\"}\r\n        </button>\r\n      </div>\r\n    \r\n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\r\n        <h2>${translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n        {visible2 && <span>${translate(\r\n          \"a demo text to force the refrence element to move forward!\"\r\n        )}</span>}\r\n        <ElementPopper ref={ref} {...globalProps} />\r\n        <button\r\n          onClick={() => {\r\n            setVisible2(!visible2)\r\n          \r\n            ref.current.refreshPosition()\r\n          }}\r\n        >\r\n          {visible2 ? \"${translate(\"refresh\")}\" : \"${translate(\"click here\")}\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}`,\r\n    jsx: (\r\n      <div>\r\n        <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\r\n          <h2>{translate(\"Example 1 (without using refresh position)\")} :</h2>\r\n          {visible && (\r\n            <span>\r\n              {translate(\r\n                \"a demo text to force the refrence element to move forward!\"\r\n              )}\r\n            </span>\r\n          )}\r\n          <ElementPopper {...globalProps} />\r\n          <button onClick={() => setVisible(!visible)}>\r\n            {visible ? translate(\"refresh\") : translate(\"click here\")}\r\n          </button>\r\n        </div>\r\n\r\n        <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\r\n          <h2>{translate(\"Example 2 (with using refresh position)\")} :</h2>\r\n          {visible2 && (\r\n            <span>\r\n              {translate(\r\n                \"a demo text to force the refrence element to move forward!\"\r\n              )}\r\n            </span>\r\n          )}\r\n          <ElementPopper ref={ref} {...globalProps} />\r\n          <button\r\n            onClick={() => {\r\n              setVisible2(!visible2);\r\n\r\n              ref.current.refreshPosition();\r\n            }}\r\n          >\r\n            {visible2 ? translate(\"refresh\") : translate(\"click here\")}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  return [refresh];\r\n}\r\n\r\nfunction Component({ size, backgroundColor, children, translate }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: size + \"px\",\r\n        height: size + \"px\",\r\n        backgroundColor,\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"16px\",\r\n      }}\r\n    >\r\n      {translate(children)}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport doc from \"../docs/refresh_position\"\r\n\r\nexport default function RefreshPosition({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={doc} />\r\n  )\r\n}"],"sourceRoot":""}