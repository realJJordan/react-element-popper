{"version":3,"sources":["webpack://react-element-popper/./src/docs/nested_dropdown.js","webpack://react-element-popper/./src/pages/nested-dropdown.js"],"names":["Doc","translate","language","useState","state","setState","state1","setState1","Button","number","onClick","updateState","list","className","mainList","map","index","key","onMouseOver","main","containerStyle","width","element","style","float","popper","position","title","description","code","jsx","marginBottom","NestedDropDown","pageContext","doc"],"mappings":"+MAGe,SAASA,EAAIC,EAAWC,GAAW,IAAD,GACrBC,cAAS,IAA5BC,EADwC,KACjCC,EADiC,QAEnBF,eAAS,GAA9BG,EAFwC,KAEhCC,EAFgC,KAOzCC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,0BAAQC,QAAS,kBAJC,SAACD,GAAD,aAClBF,EAAU,OAAD,UAAMD,IAAN,MAAeG,IAAUH,EAAOG,GAAhC,KAGcE,CAAYF,KAChCR,EAAU,gBAITW,EACJ,sBAAIC,UAAU,YACZ,0BAAKZ,EAAU,WACf,0BAAKA,EAAU,WACf,0BAAKA,EAAU,WACf,0BAAKA,EAAU,YAIba,EACJ,uBAAKD,UAAU,YACZ,CAAC,EAAG,EAAG,EAAG,GAAGE,KAAI,SAACN,EAAQO,GAAT,OAChB,uBACEC,IAAKD,EACLH,UAAU,OACVK,YAAa,wBAAMb,IAAQ,GAAGc,MAAM,IAAO,OAASV,IAAS,EAAlC,MAE3B,gBAAC,IAAD,CACEW,eAAgB,CACdC,MAAO,SAETC,QACE,gCACE,4BACGrB,EAAU,QADb,IACuBQ,GAEvB,wBAAMc,MAAO,CAAEC,MAAoB,OAAbtB,EAAoB,QAAU,SACjD,MAIPuB,OAAQrB,EAAM,OAASK,IAAWG,EAClCc,SAAuB,OAAbxB,EAAoB,YAAc,kBAwLtD,MAAO,CAjLe,CACpByB,MAAO,iBACPC,YAAa,gBACbC,KAAK,qVASyC5B,EAC5C,cAVE,sEAgBuB,OAAbC,EAAoB,QAAU,QAhBxC,uHAoB2B,OAAbA,EAAoB,QAAU,QApB5C,uIAwB+B,OAAbA,EAAoB,QAAU,QAxBhD,+FA0BoCD,EAAU,YA1B9C,iFAkCJ6B,IACE,gBAAC,IAAD,CACEJ,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OACEnB,EAAO,IACL,gBAAC,IAAD,CACEoB,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OACEnB,EAAO,IACL,gBAAC,IAAD,CACEoB,SAAuB,OAAbxB,EAAoB,QAAU,OACxCoB,QAAS,gBAACd,EAAD,CAAQC,OAAQ,IACzBgB,OACEnB,EAAO,IAAM,8BAASL,EAAU,oBAYnC,CACf0B,MAAO,kBACPC,YACE,gCACE,yBAAI3B,EAAU,oBACd,yBAAIA,EAAU,eACd,2BACE,wBAAMY,UAAU,gBAAhB,4VA0BF,yBAAIZ,EAAU,QAAd,KACA,2BACE,wBAAMY,UAAU,gBAAhB,wOASEZ,EAAU,UATZ,oBAUEA,EAAU,UAVZ,oBAWEA,EAAU,UAXZ,oBAYEA,EAAU,UAZZ,wdA+BcA,EAAU,QA/BxB,6DAiCqB,OAAbC,EAAoB,QAAU,QAjCtC,qIAsC2B,OAAbA,EAAoB,YAAc,YAtChD,qNAmDED,EAAU,cAnDZ,0FAuDqB,OAAbC,EAAoB,cAAgB,gBAvD5C,uBA+DN4B,IACE,uBAAKP,MAAO,CAAEQ,aAAc,SAC1B,gBAAC,IAAD,CACET,QACE,0BAAQZ,QAAS,kBAAML,EAAS,CAAEc,MAAOf,EAAMe,SAC5ClB,EAAU,eAGfwB,OAAQrB,EAAMe,MAAQL,EACtBY,SAAuB,OAAbxB,EAAoB,cAAgB,oBC9NzC,SAAS8B,EAAT,GAA0C,IACjD9B,EADgD,EAAf+B,YACV/B,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUgC,IAAKA","file":"component---src-pages-nested-dropdown-js-c176dc935981d3c83c2b.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ElementPopper from \"../../../src/index\";\r\n\r\nexport default function Doc(translate, language) {\r\n  const [state, setState] = useState({});\r\n  const [state1, setState1] = useState(false);\r\n\r\n  const updateState = (number) =>\r\n    setState1({ ...state1, [number]: !state1[number] });\r\n\r\n  const Button = ({ number }) => (\r\n    <button onClick={() => updateState(number)}>\r\n      {translate(\"click here\")}\r\n    </button>\r\n  );\r\n\r\n  const list = (\r\n    <ul className=\"dropdown\">\r\n      <li>{translate(\"item 1\")}</li>\r\n      <li>{translate(\"item 2\")}</li>\r\n      <li>{translate(\"item 3\")}</li>\r\n      <li>{translate(\"item 4\")}</li>\r\n    </ul>\r\n  );\r\n\r\n  const mainList = (\r\n    <div className=\"dropdown\">\r\n      {[1, 2, 3, 4].map((number, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"item\"\r\n          onMouseOver={() => setState({ main: true, [\"item\" + number]: true })}\r\n        >\r\n          <ElementPopper\r\n            containerStyle={{\r\n              width: \"120px\",\r\n            }}\r\n            element={\r\n              <>\r\n                <span>\r\n                  {translate(\"item\")} {number}\r\n                </span>\r\n                <span style={{ float: language === \"en\" ? \"right\" : \"left\" }}>\r\n                  {\">\"}\r\n                </span>\r\n              </>\r\n            }\r\n            popper={state[\"item\" + number] && list}\r\n            position={language === \"en\" ? \"right-top\" : \"left-top\"}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  const simpleExample = {\r\n    title: \"Simple Example\",\r\n    description: \"simple_nested\",\r\n    code: `import React, { useState } from \"react\"\r\nimport ElementPopper from \"react-element-popper\"\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState({})\r\n\r\n  const updateState = number => setState({ ...state, [number]: !state[number] })\r\n\r\n  const Button = ({ number }) => (\r\n    <button onClick={() => updateState(number)}>${translate(\r\n      \"click here\"\r\n    )}</button>\r\n  )\r\n\r\n  return (\r\n    <ElementPopper\r\n      position=\"${language === \"en\" ? \"right\" : \"left\"}\"\r\n      element={<Button number={1} />}\r\n      popper={state[1] && (\r\n        <ElementPopper\r\n          position=\"${language === \"en\" ? \"right\" : \"left\"}\"\r\n          element={<Button number={2} />}\r\n          popper={state[2] && (\r\n            <ElementPopper\r\n              position=\"${language === \"en\" ? \"right\" : \"left\"}\"\r\n              element={<Button number={3} />}\r\n              popper={state[3] && <button>${translate(\"last one\")}</button>}\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n    />\r\n  )\r\n}`,\r\n    jsx: (\r\n      <ElementPopper\r\n        position={language === \"en\" ? \"right\" : \"left\"}\r\n        element={<Button number={1} />}\r\n        popper={\r\n          state1[1] && (\r\n            <ElementPopper\r\n              position={language === \"en\" ? \"right\" : \"left\"}\r\n              element={<Button number={2} />}\r\n              popper={\r\n                state1[2] && (\r\n                  <ElementPopper\r\n                    position={language === \"en\" ? \"right\" : \"left\"}\r\n                    element={<Button number={3} />}\r\n                    popper={\r\n                      state1[3] && <button>{translate(\"last one\")}</button>\r\n                    }\r\n                  />\r\n                )\r\n              }\r\n            />\r\n          )\r\n        }\r\n      />\r\n    ),\r\n  };\r\n\r\n  const dropdown = {\r\n    title: \"Nested DropDown\",\r\n    description: (\r\n      <>\r\n        <p>{translate(\"nested_dropdown\")}</p>\r\n        <p>{translate(\"style.css:\")}</p>\r\n        <pre>\r\n          <code className=\"language-css\">\r\n            {`.dropdown {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  background-color: white;\r\n  border: 1px solid black;\r\n}\r\n\r\n.dropdown li {\r\n  min-width: 120px;\r\n  cursor: pointer;\r\n  padding: 2px 10px;\r\n}\r\n\r\n.dropdown li:hover,\r\n.dropdown div.item:hover {\r\n  background: #ddd;\r\n}\r\n\r\n.dropdown div.item {\r\n  cursor: pointer;\r\n  height: 26px;\r\n}`}\r\n          </code>\r\n        </pre>\r\n        <p>{translate(\"code\")}:</p>\r\n        <pre>\r\n          <code className=\"language-jsx\">\r\n            {`import React, { useState } from \"react\"\r\nimport ElementPopper from \"react-element-popper\"\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState({})\r\n\r\n  const list = (\r\n    <ul className=\"dropdown\">\r\n      <li>${translate(\"item 1\")}</li>\r\n      <li>${translate(\"item 2\")}</li>\r\n      <li>${translate(\"item 3\")}</li>\r\n      <li>${translate(\"item 4\")}</li>\r\n    </ul>\r\n  )\r\n        \r\n  const mainList = (\r\n    <div className=\"dropdown\">\r\n      {[1, 2, 3, 4].map((number, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"item\"\r\n          onMouseOver={() => setState({ \r\n            main: true, \r\n            [\"item\" + number]: true \r\n          })}\r\n        >\r\n          <ElementPopper\r\n            containerStyle={{ width: \"120px\" }}\r\n            element={(\r\n              <>\r\n                <span>${translate(\"item\")} {number}</span>\r\n                <span style={{ float: \"${\r\n                  language === \"en\" ? \"right\" : \"left\"\r\n                }\" }}>{\">\"}</span>\r\n              </>\r\n            )}\r\n            popper={state[\"item\" + number] && list}\r\n            position=\"${language === \"en\" ? \"right-top\" : \"left-top\"}\"\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <ElementPopper\r\n      element={(\r\n        <button\r\n          onClick={() => setState({ main: !state.main })}\r\n        >\r\n          ${translate(\"click here\")}\r\n        </button>\r\n      )}\r\n      popper={state.main && mainList}\r\n      position=\"${language === \"en\" ? \"bottom-left\" : \"bottom-right\"}\"\r\n    />\r\n  )\r\n}`}\r\n          </code>\r\n        </pre>\r\n      </>\r\n    ),\r\n    jsx: (\r\n      <div style={{ marginBottom: \"40px\" }}>\r\n        <ElementPopper\r\n          element={\r\n            <button onClick={() => setState({ main: !state.main })}>\r\n              {translate(\"click here\")}\r\n            </button>\r\n          }\r\n          popper={state.main && mainList}\r\n          position={language === \"en\" ? \"bottom-left\" : \"bottom-right\"}\r\n        />\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  return [simpleExample, dropdown];\r\n}\r\n","import React from \"react\"\r\nimport Layout from \"../components/layout/layout\"\r\nimport doc from \"../docs/nested_dropdown\"\r\n\r\nexport default function NestedDropDown({ pageContext }) {\r\n  const language = pageContext.language || \"en\"\r\n\r\n  return (\r\n    <Layout language={language} doc={doc} />\r\n  )\r\n}"],"sourceRoot":""}