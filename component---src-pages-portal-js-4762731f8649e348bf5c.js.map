{"version":3,"sources":["webpack://react-element-popper/./src/docs/portal.js","webpack://react-element-popper/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-element-popper/./src/pages/portal.js"],"names":["styles","wrapper","position","overflow","height","width","backgroundColor","borderRadius","padding","display","justifyContent","boxShadow","container","margin","element","cursor","fontSize","popper","color","flexDirection","Doc","title","code","jsx","style","Tooltip","label","text","portal","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","useState","isVisible","setIsVisible","containerStyle","onMouseOver","toggleVisible","onMouseLeave","Page","language","pageContext","doc"],"mappings":"mNAGMA,EAAS,CACbC,QAAS,CACPC,SAAU,WACVC,SAAU,SACVC,OAAQ,OACRC,MAAO,QACPC,gBAAiB,OACjBC,aAAc,MACdC,QAAS,MACTC,QAAS,OACTC,eAAgB,gBAChBC,UAAW,uBAEbC,UAAW,CACTC,OAAQ,QAEVC,QAAS,CACPR,gBAAiB,QACjBO,OAAQ,WACRL,QAAS,MACTD,aAAc,MACdI,UAAW,gBACXI,OAAQ,UACRC,SAAU,QAEZC,OAAQ,CACNb,OAAQ,OACRE,gBAAiB,QACjBY,MAAO,QACPX,aAAc,MACdC,QAAS,MACTC,QAAS,OACTU,cAAe,SACfT,eAAgB,WAIL,SAASU,IAqFtB,MAAO,CApFQ,CACbC,MAAO,SACPC,KAAK,omDA0ELC,IACE,uBAAKC,MAAOxB,EAAOC,SACjB,gBAACwB,EAAD,CAASC,MAAM,UAAUC,KAAK,YAC9B,gBAACF,EAAD,CAASC,MAAM,SAASC,KAAK,SAASC,QAAM,OAQpD,SAASH,EAAT,GAA6C,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAASE,EChIpB,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDoHmC,wBACRM,eAAS,GAApCC,EADmC,KACxBC,EADwB,KAG1C,OACE,gBAAC,IAAD,eACEC,eAAgB3C,EAAOY,UACvBE,QACE,uBACEU,MAAOxB,EAAOc,QACd8B,YAAaC,EACbC,aAAcD,GAEbnB,GAGLT,OAAQwB,GAAa,uBAAKjB,MAAOxB,EAAOiB,QAASU,IAC7CE,IAIR,SAASgB,IACPH,GAAcD,IEjJH,SAASM,EAAT,GAAgC,IACvCC,EADsC,EAAfC,YACAD,UAAY,KAEzC,OAAO,gBAAC,IAAD,CAAQA,SAAUA,EAAUE,IAAKA","file":"component---src-pages-portal-js-4762731f8649e348bf5c.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ElementPopper from \"../../../src\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"60px\",\r\n    width: \"150px\",\r\n    backgroundColor: \"#aaa\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    boxShadow: \"inset 0 0 5px black\",\r\n  },\r\n  container: {\r\n    margin: \"auto\",\r\n  },\r\n  element: {\r\n    backgroundColor: \"white\",\r\n    margin: \"5px 10px\",\r\n    padding: \"5px\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 0 3px black\",\r\n    cursor: \"default\",\r\n    fontSize: \"14px\",\r\n  },\r\n  popper: {\r\n    height: \"50px\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n};\r\n\r\nexport default function Doc() {\r\n  const portal = {\r\n    title: \"Portal\",\r\n    code: `import React, { useState } from \"react\";\r\nimport ElementPopper from \"react-element-popper\";\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    height: \"60px\",\r\n    width: \"150px\",\r\n    backgroundColor: \"#aaa\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    boxShadow: \"inset 0 0 5px black\",\r\n  },\r\n  container: {\r\n    margin: \"auto\",\r\n  },\r\n  element: {\r\n    backgroundColor: \"white\",\r\n    margin: \"5px 10px\",\r\n    padding: \"5px\",\r\n    borderRadius: \"5px\",\r\n    boxShadow: \"0 0 3px black\",\r\n    cursor: \"default\",\r\n    fontSize: \"14px\",\r\n  },\r\n  popper: {\r\n    height: \"50px\",\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"5px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n};\r\n\r\nfunction Tooltip({ label, text, ...props }) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  return (\r\n    <ElementPopper\r\n      containerStyle={styles.container}\r\n      element={\r\n        <div\r\n          style={styles.element}\r\n          onMouseOver={toggleVisible}\r\n          onMouseLeave={toggleVisible}\r\n        >\r\n          {label}\r\n        </div>\r\n      }\r\n      popper={isVisible && <div style={styles.popper}>{text}</div>}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  function toggleVisible() {\r\n    setIsVisible(!isVisible);\r\n  }\r\n}\r\n\r\nexport default function Example(){\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <Tooltip label=\"default\" text=\"default\" />\r\n      <Tooltip label=\"portal\" text=\"portal\" portal />\r\n    </div>\r\n  )\r\n}\r\n`,\r\n    jsx: (\r\n      <div style={styles.wrapper}>\r\n        <Tooltip label=\"default\" text=\"default\" />\r\n        <Tooltip label=\"portal\" text=\"portal\" portal />\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  return [portal];\r\n}\r\n\r\nfunction Tooltip({ label, text, ...props }) {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  return (\r\n    <ElementPopper\r\n      containerStyle={styles.container}\r\n      element={\r\n        <div\r\n          style={styles.element}\r\n          onMouseOver={toggleVisible}\r\n          onMouseLeave={toggleVisible}\r\n        >\r\n          {label}\r\n        </div>\r\n      }\r\n      popper={isVisible && <div style={styles.popper}>{text}</div>}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  function toggleVisible() {\r\n    setIsVisible(!isVisible);\r\n  }\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport Layout from \"../components/layout/layout\";\r\nimport doc from \"../docs/portal\";\r\n\r\nexport default function Page({ pageContext }) {\r\n  const language = pageContext.language || \"en\";\r\n\r\n  return <Layout language={language} doc={doc} />;\r\n}\r\n"],"sourceRoot":""}