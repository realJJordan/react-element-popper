{"version":3,"sources":["webpack://react-element-popper/./src/docs/navbar.js","webpack://react-element-popper/./src/pages/navbar.js"],"names":["translate","language","title","description","NavBar","className","useState","navItem","setNavItem","navBarRef","useRef","useEffect","handleClickOutSide","e","current","contains","target","classList","document","addEventListener","removeEventListener","items","home","name","childs","store","docs","about","itemNames","Object","keys","ref","map","index","key","element","NavItem","popper","List","containerStyle","margin","offsetY","position","length","fixMainPosition","onClick","subMenu","setSubMenu","item","i","Item","width","onMouseOver","pageContext","doc"],"mappings":"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","file":"component---src-pages-navbar-js-3c57017984ee13d6e99f.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport ElementPopper from \"../../../index\"\n\nexport default function (translate, language) {\n  const navbar = {\n    title: \"NavBar\",\n    description: <>\n      <NavBar />\n      <p>{translate(\"style.css:\")}</p>\n      <pre>\n        <code className=\"language-css\">\n          {\n            `.nested-navbar {\n  height: 55px;\n  background-color: rgb(146, 146, 221);\n  display: flex;\n  justify-content: space-between;\n}\n          \n.nested-navbar .navbar-item {\n  background-color: white;\n  padding: 5px 15px;\n  border-radius: 5px;\n  line-height: 20px;\n  margin: 0 10px;\n  cursor: pointer;\n}\n          \n.nested-navbar .navbar-item:hover {\n  background-color: rgb(170, 170, 247);\n  color: white;\n  transition: 0.4s;\n}\n          \n.items {\n  background-color: rgb(146, 146, 221);\n  min-width: 100px;\n}\n          \n.items .item {\n  cursor: pointer;\n  margin: 2px 0;\n  font-size: 12px;\n  color: white;\n  padding: 2px 10px;\n  width: 100%;\n  box-sizing: border-box;\n}\n          \n.items .item:hover {\n  background-color: rgb(115, 115, 196);\n}\n          \n.items .item span {\n  float: right;\n}`\n          }\n        </code>\n      </pre>\n      <pre>\n        <code className=\"language-jsx\">\n          {\n            `function NavBar() {\n  const [navItem, setNavItem] = useState(\"\")\n  const navBarRef = useRef()\n          \n  useEffect(() => {\n    function handleClickOutSide(e) {\n      if (\n        (\n          navBarRef.current &&\n          !navBarRef.current.contains(e.target) &&\n          !e.target.classList.contains(\"navbar-item\")\n        ) ||\n        e.target.classList.contains(\"navbar\")\n      ) {\n        setNavItem(\"\")\n      }\n    }\n          \n    document.addEventListener(\"click\", handleClickOutSide)\n\n    return () => document.removeEventListener(\"click\", handleClickOutSide)\n  }, [])\n          \n  const items = {\n    home: [\n      {\n        name: \"item 1\",\n        childs: [\n          {\n            name: \"sub item 1\",\n            childs: [\n              { name: \"sub item 1\" },\n              { name: \"sub item 2\" },\n              { name: \"sub item 3\" },\n              { name: \"sub item 4\" },\n              { name: \"sub item 5\" },\n              { name: \"sub item 6\" }\n            ]\n          },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      },\n      {\n        name: \"item 2\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" },\n          { name: \"sub item 5\" },\n          { name: \"sub item 6\" }\n        ]\n      },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ],\n    store: [\n      { name: \"item 1\" },\n      { name: \"item 2\" },\n      { name: \"item 3\" },\n      {\n        name: \"item 4\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      }\n    ],\n    docs: [\n      { name: \"item 1\", },\n      {\n        name: \"item 2\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          {\n            name: \"sub item 4\",\n            childs: [\n              { name: \"sub item 1\" }\n            ]\n          }\n        ]\n      },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ],\n    about: [\n      {\n        name: \"item 1\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      },\n      { name: \"item 2\" },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ]\n  }\n          \n  const itemNames = Object.keys(items)\n          \n  return (\n    <div\n      ref={navBarRef}\n      className=\"nested-navbar\"\n    >\n      {itemNames.map((name, index) => {\n        return (\n          <ElementPopper\n            key={index}\n            element={<NavItem name={name} />}\n            popper={navItem === name && (\n              <List items={items[name]} />\n            )}\n            containerStyle={{ margin: \"auto 0\" }}\n            offsetY={12}\n            position={index === 0 ? \"bottom-left\" : index === (itemNames.length - 1) ? \"bottom-right\" : \"bottom-center\"}\n            fixMainPosition\n          />\n        )\n      })}\n    </div>\n  )\n          \n  function NavItem({ name }) {\n    return (\n      <div\n        className=\"navbar-item\"\n        onClick={toggleVisible}\n      >\n        {name}\n      </div>\n    )\n          \n    function toggleVisible() {\n      setNavItem(navItem === name ? \"\" : name)\n    }\n  }\n          \n  function List({ items }) {\n    const [subMenu, setSubMenu] = useState(\"\")\n          \n    return (\n      <div className=\"items\">\n        {items.map((item, i) => {\n          return (item.childs ?\n            <ElementPopper\n              key={i}\n              element={<Item item={item} />}\n              popper={subMenu === item.name && <List items={item.childs} />}\n              containerStyle={{ width: \"100%\" }}\n              position=\"right-top\"\n            /> :\n            <Item key={i} item={item} />\n          )\n        })}\n      </div>\n    )\n          \n    function Item({ item }) {\n      return (\n        <div\n          className=\"item\"\n          onMouseOver={() => openSubMenu(item.name)}\n        >\n          {item.name}\n          {item.childs && <span>{\">\"}</span>}\n        </div>\n      )\n    }\n          \n    function openSubMenu(name) {\n      setSubMenu(name)\n    }\n  }\n}`\n          }\n        </code>\n      </pre>\n    </>\n  }\n\n\n  return [\n    navbar\n  ]\n}\n\nfunction NavBar() {\n  const [navItem, setNavItem] = useState(\"\")\n  const navBarRef = useRef()\n\n  useEffect(() => {\n    function handleClickOutSide(e) {\n      if (\n        (\n          navBarRef.current &&\n          !navBarRef.current.contains(e.target) &&\n          !e.target.classList.contains(\"navbar-item\")\n        ) ||\n        e.target.classList.contains(\"navbar\")\n      ) {\n        setNavItem(\"\")\n      }\n    }\n\n    document.addEventListener(\"click\", handleClickOutSide)\n\n    return () => document.removeEventListener(\"click\", handleClickOutSide)\n  }, [])\n\n  const items = {\n    home: [\n      {\n        name: \"item 1\",\n        childs: [\n          {\n            name: \"sub item 1\",\n            childs: [\n              { name: \"sub item 1\" },\n              { name: \"sub item 2\" },\n              { name: \"sub item 3\" },\n              { name: \"sub item 4\" },\n              { name: \"sub item 5\" },\n              { name: \"sub item 6\" }\n            ]\n          },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      },\n      {\n        name: \"item 2\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" },\n          { name: \"sub item 5\" },\n          { name: \"sub item 6\" }\n        ]\n      },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ],\n    store: [\n      { name: \"item 1\" },\n      { name: \"item 2\" },\n      { name: \"item 3\" },\n      {\n        name: \"item 4\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      }\n    ],\n    docs: [\n      { name: \"item 1\", },\n      {\n        name: \"item 2\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          {\n            name: \"sub item 4\",\n            childs: [\n              { name: \"sub item 1\" }\n            ]\n          }\n        ]\n      },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ],\n    about: [\n      {\n        name: \"item 1\",\n        childs: [\n          { name: \"sub item 1\" },\n          { name: \"sub item 2\" },\n          { name: \"sub item 3\" },\n          { name: \"sub item 4\" }\n        ]\n      },\n      { name: \"item 2\" },\n      { name: \"item 3\" },\n      { name: \"item 4\" }\n    ]\n  }\n\n  const itemNames = Object.keys(items)\n\n  return (\n    <div\n      ref={navBarRef}\n      className=\"nested-navbar\"\n    >\n      {itemNames.map((name, index) => {\n        return (\n          <ElementPopper\n            key={index}\n            element={<NavItem name={name} />}\n            popper={navItem === name && <List items={items[name]} />}\n            containerStyle={{ margin: \"auto 0\" }}\n            offsetY={12}\n            position={index === 0 ? \"bottom-left\" : index === (itemNames.length - 1) ? \"bottom-right\" : \"bottom-center\"}\n            fixMainPosition\n          />\n        )\n      })}\n    </div>\n  )\n\n  function NavItem({ name }) {\n    return (\n      <div\n        className=\"navbar-item\"\n        onClick={toggleVisible}\n      >\n        {name}\n      </div>\n    )\n\n    function toggleVisible() {\n      setNavItem(navItem === name ? \"\" : name)\n    }\n  }\n\n  function List({ items }) {\n    const [subMenu, setSubMenu] = useState(\"\")\n\n    return (\n      <div className=\"items\">\n        {items.map((item, i) => {\n          return (item.childs ?\n            <ElementPopper\n              key={i}\n              element={<Item item={item} />}\n              popper={subMenu === item.name && <List items={item.childs} />}\n              containerStyle={{ width: \"100%\" }}\n              position=\"right-top\"\n            /> :\n            <Item\n              key={i}\n              item={item}\n            />\n          )\n        })}\n      </div>\n    )\n\n    function Item({ item }) {\n      return (\n        <div\n          className=\"item\"\n          onMouseOver={() => openSubMenu(item.name)}\n        >\n          {item.name}\n          {item.childs && <span>{\">\"}</span>}\n        </div>\n      )\n    }\n\n    function openSubMenu(name) {\n      setSubMenu(name)\n    }\n  }\n}\n","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport doc from \"../docs/navbar\"\n\nexport default function NavBar({ pageContext }) {\n  const language = pageContext.language || \"en\"\n\n  return (\n    <Layout language={language} doc={doc} />\n  )\n}"],"sourceRoot":""}