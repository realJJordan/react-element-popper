(self.webpackChunkreact_element_popper=self.webpackChunkreact_element_popper||[]).push([[641],{1664:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return s}});var r=t(7294),l=t(591),o=t(1006);function a(e,n){var t=(0,r.useState)(!1),l=t[0],a=t[1],s=(0,r.useState)(!1),u=s[0],d=s[1],m=(0,r.useState)(!1),h=m[0],g=m[1],f=(0,r.useState)(!1),E=f[0],C=f[1],v=(0,r.useState)(!1),b=v[0],x=v[1];return[{title:"Active Prop",description:r.createElement(r.Fragment,null,r.createElement("p",null,e("active_prop_1")),r.createElement("pre",null,r.createElement("code",{className:"language-jsx"},"const [active, setActive] = useState(false)\n\n<ElementPopper\n  element={<Element />}\n  popper={active && <Popper />}\n/>")),r.createElement("p",null,e("active_prop_2")),r.createElement("pre",null,r.createElement("code",{className:"language-jsx"},'function AsyncPopper() {\n  const [element, setElement] = useState()\n          \n  useEffect(() => {\n    //async operation\n    setTimeout(() => {\n      setElement(\n        <div \n          style={{ \n            width: "120px", \n            height: "120px",\n            backgroundColor: "white" \n          }}\n        >\n          Popper Element\n        </div>\n      )\n    }, 200);\n  }, [])\n          \n  return element || <div>Loading ...</div>\n}\n\nconst [active, setActive] = useState(false)\n\n<ElementPopper\n  element={<Element />}\n  popper={<AsyncPopper />}\n  active={active}\n/>')),r.createElement("p",null,e("active_prop_3")),r.createElement("p",null,e("active_prop_4")))},{title:"First Example",description:"first_example",code:'import React, { useState } from "react"\nimport ElementPopper from "react-element-popper"\n\nfunction Component({ height, width, backgroundColor, children }) {\n  return (\n    <div\n      style={{\n        width: width + "px",\n        height: height + "px",\n        backgroundColor,\n        textAlign: "center",\n        display: "flex",\n        flexDirection: "column",\n        justifyContent: "center"\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default function Example() {\n  const [active, setActive] = useState(false)\n\n  return (\n    <>\n      <button \n        onClick={() => setActive(!active)}\n      >\n        '+e("toggle visible")+'\n      </button>\n      <br />\n      <ElementPopper\n        element={(\n          <Component\n            height={40}\n            width={120}\n            backgroundColor="red"\n          >\n            Refrence Element\n          </Component>\n        )}\n        popper={active && (\n          <Component\n            height={120}\n            width={120}\n            backgroundColor="gray"\n          >\n            Popper Element\n          </Component>\n        )}\n        position="'+("en"===n?"right":"left")+'"\n      />\n    </>\n  )\n}',jsx:r.createElement(r.Fragment,null,r.createElement("button",{onClick:function(){return a(!l)}},e("toggle visible")),r.createElement("br",null),r.createElement(o.Z,{element:r.createElement(i,{height:40,width:120,backgroundColor:"red",translate:e},"Refrence Element"),popper:l&&r.createElement(i,{height:120,width:120,backgroundColor:"gray",translate:e},"Popper Element"),position:"en"===n?"right":"left"}))},{title:"Second Example",jsx:r.createElement(r.Fragment,null,r.createElement("p",null,e("second_example")),r.createElement("button",{onClick:function(){return d(!u)}},e("toggle visible")),r.createElement("br",null),r.createElement(o.Z,{element:r.createElement(i,{height:40,width:120,backgroundColor:"red",translate:e},"Refrence Element"),popper:u&&r.createElement(c,{height:120,width:120,backgroundColor:"gray",translate:e},"Popper Element"),position:"en"===n?"right":"left"}),r.createElement("pre",null,r.createElement("code",{className:"language-jsx"},'function AsyncComponent({ height, width, backgroundColor, children }) {\n  const [props, setProps] = useState()\n          \n  useEffect(() => {\n    setProps({\n      style: {\n        width: width + "px",\n        height: height + "px",\n        backgroundColor,\n        textAlign: "center",\n        display: "flex",\n        flexDirection: "column",\n        justifyContent: "center"\n      }\n    })\n  }, [height, width, backgroundColor])\n          \n  return props ?\n    <div {...props}>\n      {children}\n    </div>\n    :\n    null\n}\n\nexport default function Example() {\n  const [active, setActive] = useState(false)\n\n  return (\n    <>\n      <button \n        onClick={() => setActive(!active)}\n      >\n        '+e("toggle visible")+'\n      </button>\n      <br />\n      <ElementPopper\n        element={(\n          <Component\n            height={40}\n            width={120}\n            backgroundColor="red"\n          >\n            Refrence Element\n          </Component>\n        )}\n        popper={active && (\n          <AsyncComponent\n            height={120}\n            width={120}\n            backgroundColor="gray"\n          >\n            Popper Element\n          </AsyncComponent>\n        )}\n        position="'+("en"===n?"right":"left")+'"\n      />\n    </>\n  )\n}')),r.createElement("p",null,e("second_example_1")),r.createElement("p",null,e("second_example_2")),r.createElement("pre",null,r.createElement("code",{className:"language-jsx"},"export default function Example() {\n  const [active, setActive] = useState(false)\n\n  return (\n    <>\n      <button \n        onClick={() => setActive(!active)}\n      >\n        "+e("toggle visible")+'\n      </button>\n      <br />\n      <ElementPopper\n        element={(\n          <Component\n            height={40}\n            width={120}\n            backgroundColor="red"\n          >\n            Refrence Element\n          </Component>\n        )}\n        popper={(\n          <AsyncComponent\n            height={120}\n            width={120}\n            backgroundColor="gray"\n          >\n            Popper Element\n          </AsyncComponent>\n        )}\n        position="'+("en"===n?"right":"left")+'"\n        active={active}\n      />\n    </>\n  )\n}')),r.createElement("button",{onClick:function(){return g(!h)}},e("toggle visible")),r.createElement("br",null),r.createElement(o.Z,{element:r.createElement(i,{height:40,width:120,backgroundColor:"red",translate:e},"Refrence Element"),popper:r.createElement(c,{height:120,width:120,backgroundColor:"gray",translate:e},"Popper Element"),position:"en"===n?"right":"left",active:h}),r.createElement("p",null,e("second_example_3")))},{title:"Third Example",jsx:r.createElement(r.Fragment,null,r.createElement("p",null,e("third_example")),r.createElement("p",null,e("third_example_1")),r.createElement("pre",null,r.createElement("code",{className:"language-jsx"},'function AsyncComponent({ height, width, backgroundColor, children, onReady }) {\n  const [state, setState] = useState({})\n            \n  useEffect(() => {\n    setState({\n      props: {\n        style: {\n          width: width + "px",\n          height: height + "px",\n          backgroundColor,\n          textAlign: "center",\n          display: "flex",\n          flexDirection: "column",\n          justifyContent: "center"\n        }\n      },\n      ready: true\n    })\n  }, [height, width, backgroundColor])\n            \n  useEffect(() => {\n    if (!state.ready) return\n\n    onReady()\n  }, [state.ready, onReady])\n            \n  return state.ready ?\n    <div {...state.props}>\n      {children}\n    </div>\n    :\n    null\n}\n            \nexport default function Example() {\n  const [active, setActive] = useState(false)\n  const [isPopperReady, setIsPopperReady] = useState(false)\n            \n  return (\n    <>\n      <button \n        onClick={() => {\n          if (!active) {\n            setActive(true)\n          } else {\n            setActive(false)\n            setIsPopperReady(false)\n          }\n        }}\n      >\n        '+e("toggle visible")+'\n      </button>\n      <br />\n      <ElementPopper\n        element={(\n          <Component\n            height={40}\n            width={120}\n            backgroundColor="red"\n          >\n            Refrence Element\n          </Component>\n        )}\n        popper={active && (\n          <AsyncComponent\n            height={120}\n            width={120}\n            backgroundColor="gray"\n            onReady={() => setIsPopperReady(true)}\n          >\n            Popper Element\n          </AsyncComponent>\n        )}\n        position="'+("en"===n?"right":"left")+'"\n        active={isPopperReady}\n      />\n    </>\n  )\n}')),r.createElement("button",{onClick:function(){E?(C(!1),x(!1)):C(!0)}},e("toggle visible")),r.createElement("br",null),r.createElement(o.Z,{element:r.createElement(i,{height:40,width:120,backgroundColor:"red",translate:e},"Refrence Element"),popper:E&&r.createElement(p,{height:120,width:120,backgroundColor:"gray",translate:e,onReady:function(){x(!0)}},"Popper Element"),position:"en"===n?"right":"left",active:b}))}]}function i(e){var n=e.height,t=e.width,l=e.backgroundColor,o=e.children,a=e.translate;return r.createElement("div",{style:{width:t+"px",height:n+"px",backgroundColor:l,textAlign:"center",display:"flex",flexDirection:"column",justifyContent:"center",fontSize:"16px"}},a(o))}function c(e){var n=e.height,t=e.width,l=e.backgroundColor,o=e.children,a=e.translate,i=(0,r.useState)(),c=i[0],p=i[1];return(0,r.useEffect)((function(){p({style:{width:t+"px",height:n+"px",backgroundColor:l,textAlign:"center",display:"flex",flexDirection:"column",justifyContent:"center"}})}),[n,t,l]),c?r.createElement("div",c,a(o)):null}function p(e){var n=e.height,t=e.width,l=e.backgroundColor,o=e.children,a=e.onReady,i=e.translate,c=(0,r.useState)({}),p=c[0],s=c[1];return(0,r.useEffect)((function(){s({props:{style:{width:t+"px",height:n+"px",backgroundColor:l,textAlign:"center",display:"flex",flexDirection:"column",justifyContent:"center"}},ready:!0})}),[n,t,l]),(0,r.useEffect)((function(){p.ready&&a()}),[p.ready,a]),p.ready?r.createElement("div",p.props,i(o)):null}function s(e){var n=e.pageContext.language||"en";return r.createElement(l.Z,{language:n,doc:a})}}}]);
//# sourceMappingURL=component---src-pages-active-prop-js-4acbf1fa333f4883dfaf.js.map