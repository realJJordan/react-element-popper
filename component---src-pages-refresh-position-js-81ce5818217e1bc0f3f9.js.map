{"version":3,"sources":["webpack://react-element-popper/./src/docs/refresh_position.js","webpack://react-element-popper/./src/pages/refresh-position.js"],"names":["translate","ref","useRef","useState","visible","setVisible","visible2","setVisible2","globalProps","element","Component","size","backgroundColor","popper","position","fixMainPosition","popperShadow","arrow","title","description","code","jsx","style","marginBottom","padding","onClick","current","refreshPosition","children","width","height","textAlign","display","flexDirection","justifyContent","fontSize","RefreshPosition","language","pageContext","doc"],"mappings":"8MAGe,SAAS,EAACA,GACvB,IAAMC,GAAMC,cADsB,GAEJC,eAAS,GAAhCC,EAF2B,KAElBC,EAFkB,QAGFF,eAAS,GAAlCG,EAH2B,KAGjBC,EAHiB,KAK5BC,EAAc,CAClBC,QAAS,gBAACC,EAAD,CAAWC,KAAM,GAAIC,gBAAgB,MAAMZ,UAAWA,GAAtD,oBACTa,OAAQ,gBAACH,EAAD,CAAWC,KAAM,IAAKC,gBAAgB,QAAQZ,UAAWA,GAAzD,kBACRc,SAAU,SACVC,iBAAiB,EACjBC,cAAc,EACdC,OAAO,GAiGT,MAAO,CA9FS,CACdC,MAAO,sBACPC,YAAa,mBACbC,KAAK,20BAmCKpB,EAAU,8CAnChB,sCAoCoBA,EAAU,8DApC9B,2JAyCgBA,EAAU,WAzC1B,QAyC4CA,EAAU,cAzCtD,4HA8CMA,EAAU,2CA9ChB,uCA+CqBA,EAAU,8DA/C/B,2PAwDiBA,EAAU,WAxD3B,QAwD6CA,EAAU,cAxDvD,0DA8DJqB,IAAK,2BACH,uBAAKC,MAAO,CAAEC,aAAc,QAASC,QAAS,WAC5C,0BAAKxB,EAAU,8CAAf,MACCI,GAAW,4BAAOJ,EAAU,+DAC7B,gBAAC,IAAkBQ,GACnB,0BACEiB,QAAS,kBAAMpB,GAAYD,KAEhBJ,EAAVI,EAAoB,UAAuB,gBAIhD,uBAAKkB,MAAO,CAAEC,aAAc,QAASC,QAAS,WAC5C,0BAAKxB,EAAU,2CAAf,MACCM,GAAY,4BAAON,EAAU,+DAC9B,gBAAC,IAAD,eAAeC,IAAKA,GAASO,IAC7B,0BACEiB,QAAS,WACPlB,GAAaD,GAEbL,EAAIyB,QAAQC,oBAGF3B,EAAXM,EAAqB,UAAuB,mBAWvD,SAASI,EAAT,GAAoE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,gBAAiBgB,EAAuB,EAAvBA,SAAU5B,EAAa,EAAbA,UACpD,OACE,uBACEsB,MAAO,CACLO,MAAOlB,EAAO,KACdmB,OAAQnB,EAAO,KACfC,kBACAmB,UAAW,SACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,SAAU,SAGXnC,EAAU4B,IC9HF,SAASQ,EAAT,GAA2C,IAClDC,EADiD,EAAfC,YACXD,UAAY,KAEzC,OACE,gBAAC,IAAD,CAAQA,SAAUA,EAAUE,IAAKA","file":"component---src-pages-refresh-position-js-81ce5818217e1bc0f3f9.js","sourcesContent":["import React, { useState, useRef } from \"react\"\nimport ElementPopper from \"../../../index\"\n\nexport default function (translate) {\n  const ref = useRef()\n  const [visible, setVisible] = useState(false)\n  const [visible2, setVisible2] = useState(false)\n\n  const globalProps = {\n    element: <Component size={80} backgroundColor=\"red\" translate={translate}>Refrence Element</Component>,\n    popper: <Component size={100} backgroundColor=\"white\" translate={translate}>Popper Element</Component>,\n    position: \"bottom\",\n    fixMainPosition: true,\n    popperShadow: true,\n    arrow: true\n  }\n\n  const refresh = {\n    title: \"Refreshing Position\",\n    description: \"refresh_position\",\n    code: `import React, { useState, useRef } from \"react\"\nimport ElementPopper from \"react-element-popper\"\nimport \"react-element-popper/build/element_popper.css\"\n\nexport default function App() {\n  const [visible, setVisible] = useState(false)\n  const [visible2, setVisible2] = useState(false)\n  const ref = useRef()\n\n  const globalProps = {\n    element: (\n      <Component \n        size={80}\n        backgroundColor=\"red\"\n      >\n        Refrence Element\n      </Component>\n    ),\n    popper: (\n      <Component \n        size={100}\n        backgroundColor=\"white\"\n      >\n        Popper Element\n      </Component>\n    ),\n    position: \"bottom\",\n    fixMainPosition: true,\n    popperShadow: true,\n    arrow: true\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\n        <h2>${translate(\"Example 1 (without using refresh position)\")} :</h2>\n        {visible && <span>${translate(\"a demo text to force the refrence element to move forward!\")}</span>}\n        <ElementPopper {...globalProps} />\n        <button\n          onClick={() => setVisible(!visible)}\n        >\n          {visible ? \"${translate(\"refresh\")}\" : \"${translate(\"click here\")}\"}\n        </button>\n      </div>\n    \n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\n        <h2>${translate(\"Example 2 (with using refresh position)\")} :</h2>\n        {visible2 && <span>${translate(\"a demo text to force the refrence element to move forward!\")}</span>}\n        <ElementPopper ref={ref} {...globalProps} />\n        <button\n          onClick={() => {\n            setVisible2(!visible2)\n          \n            ref.current.refreshPosition()\n          }}\n        >\n          {visible2 ? \"${translate(\"refresh\")}\" : \"${translate(\"click here\")}\"}\n        </button>\n      </div>\n    </div>\n  )\n}`,\n    jsx: <div>\n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\n        <h2>{translate(\"Example 1 (without using refresh position)\")} :</h2>\n        {visible && <span>{translate(\"a demo text to force the refrence element to move forward!\")}</span>}\n        <ElementPopper {...globalProps} />\n        <button\n          onClick={() => setVisible(!visible)}\n        >\n          {visible ? translate(\"refresh\") : translate(\"click here\")}\n        </button>\n      </div>\n\n      <div style={{ marginBottom: \"150px\", padding: \"0 10px\" }}>\n        <h2>{translate(\"Example 2 (with using refresh position)\")} :</h2>\n        {visible2 && <span>{translate(\"a demo text to force the refrence element to move forward!\")}</span>}\n        <ElementPopper ref={ref} {...globalProps} />\n        <button\n          onClick={() => {\n            setVisible2(!visible2)\n\n            ref.current.refreshPosition()\n          }}\n        >\n          {visible2 ? translate(\"refresh\") : translate(\"click here\")}\n        </button>\n      </div>\n    </div>\n  }\n\n  return [\n    refresh\n  ]\n}\n\nfunction Component({ size, backgroundColor, children, translate }) {\n  return (\n    <div\n      style={{\n        width: size + \"px\",\n        height: size + \"px\",\n        backgroundColor,\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        fontSize: \"16px\"\n      }}\n    >\n      {translate(children)}\n    </div>\n  )\n}","import React from \"react\"\nimport Layout from \"../components/layout/layout\"\nimport doc from \"../docs/refresh_position\"\n\nexport default function RefreshPosition({ pageContext }) {\n  const language = pageContext.language || \"en\"\n\n  return (\n    <Layout language={language} doc={doc} />\n  )\n}"],"sourceRoot":""}